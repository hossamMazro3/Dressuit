{
  "openapi": "3.0.0",
  "info": {
    "title": "project API",
    "description": "An application that gives some sev=rvices to customers such as rent or sell our expensive dresses or any clothes",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Main (development) server"
    },
    {
      "url": "https://dressuit.herokuapp.com/api",
      "description": "deployment server"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "summary": "Creates a user.",
        "tags": ["user"],
        "description": "Creates a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "description": "The user's ID",
                      "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
                      "readOnly": true
                    },
                    "token": {
                      "type": "string",
                      "description": "The user's token",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "login to the system.",
        "tags": ["user"],
        "description": "if you have an account on the system please login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email",
                    "example": "email@example.com",
                    "format": "email",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The user's password",
                    "example": "password",
                    "minLength": 8,
                    "maxLength": 255,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "description": "The user's ID",
                      "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
                      "readOnly": true
                    },
                    "token": {
                      "type": "string",
                      "description": "The user's token",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Returns a list of users.",
        "tags": ["user"],
        "description": "get all users in the system it is allowed for only admins",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search query string to search for users",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The user's ID",
                        "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
                        "readOnly": true
                      },
                      "userName": {
                        "type": "string",
                        "description": "The user's name",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "description": "The user's email",
                        "example": "email@example.com",
                        "format": "email"
                      },
                      "role": {
                        "type": "string",
                        "description": "The user's role",
                        "example": "admin"
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "The user's createdAt",
                        "example": "2020-01-01T00:00:00.000Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The user's updatedAt",
                        "example": "2020-01-01T00:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": " Returns a user by ID.",
        "tags": ["user"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/User" },
                    {
                      "properties": {
                        "image": {
                          "type": "string",
                          "description": "The user's image",
                          "example": "image.png"
                        },
                        "products": {
                          "type": "array",
                          "description": "The user's products",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "The product's ID",
                                "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
                                "readOnly": true
                              },
                              "title": {
                                "type": "string",
                                "description": "The product's title",
                                "example": "Product 1"
                              },
                              "price": {
                                "type": "number",
                                "description": "The product's price",
                                "example": 1.99
                              },
                              "size":{
                                "type": "object",
                                "description": "The product's size",
                                "properties": {
                                  "width": {
                                    "type": "number",
                                    "description": "The product's width",
                                    "example": 1.99
                                  },
                                  "height": {
                                    "type": "number",
                                    "description": "The product's height",
                                    "example": 1.99
                                  },
                                  "name": {
                                    "type": "number",
                                    "description": "The product size name",
                                    "example": 1.99
                                  }
                                }
                              },
                              "images": {
                                "type": "array",
                                "description": "The product's images",
                                "items": {
                                  "type": "string",
                                  "description": "The product's image",
                                  "example": "image.png"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": " Updates a user by ID.",
        "tags": ["user"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's profile",
                    "example": "profile.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "User updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": " Deletes a user by ID.",
        "tags": ["user"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "User deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/changePass": {
      "post": {
        "summary": " Changes a user's password.",
        "tags": ["user"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "The user's old password",
                    "example": "oldPassword"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "The user's new password",
                    "example": "newPassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Password changed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/forgetPassword": {
      "post": {
        "summary": " Sends a password reset code to the user's email.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email",
                    "example": "email@example.com",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Password reset code sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/VerifyRestCode": {
      "post": {
        "summary": " Verifies a password reset code.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resetCode": {
                    "type": "string",
                    "description": "The user's reset code",
                    "example": "resetCode"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Password reset code verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/user/resetPassword": {
      "post": {
        "summary": " Resets a user's password.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "description": "The user's new password",
                    "example": "newPassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Password reset"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/product": {
      "post": {
        "summary": " Creates a product.",
        "tags": ["product"],
        "description": "Creates a product.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Product created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "summary": " Gets all products.",
        "tags": ["product"],
        "description": "Gets all products.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "The page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search query string to search for products",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The product's id",
                        "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                      },
                      "title": {
                        "type": "string",
                        "description": "The product title",
                        "example": "Product title"
                      },
                      "price": {
                        "type": "number",
                        "description": "The product price",
                        "example": "Product price"
                      },
                      "size": {
                        "type": "object",
                        "properties": {
                          "height": {
                            "type": "number",
                            "description": "The product height",
                            "example": "Product height"
                          },
                          "width": {
                            "type": "number",
                            "description": "The product width",
                            "example": "Product width"
                          },
                          "name": {
                            "type": "string",
                            "description": "The size name",
                            "example": "small"
                          }
                        }
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "The product image",
                          "example": "image1.jpg"
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "The user's id",
                            "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                          },
                          "userName": {
                            "type": "string",
                            "description": "The user's name",
                            "example": "John Doe"
                          },
                          "image": {
                            "type": "string",
                            "description": "The user's image",
                            "example": "profile.png"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/product/{productId}": {
      "get": {
        "summary": " Gets a product by ID.",
        "tags": ["product"],
        "description": "Gets a product by ID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Product"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "The user's id",
                              "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user's name",
                              "example": "John Doe"
                            },
                            "image": {
                              "type": "string",
                              "description": "The user's image",
                              "example": "profile.png"
                            }
                          }
                        },
                        "reviews": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Review"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "description": "The user's id",
                                      "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                                    },
                                    "userName": {
                                      "type": "string",
                                      "description": "The user's name",
                                      "example": "John Doe"
                                    },
                                    "image": {
                                      "type": "string",
                                      "description": "The user's image",
                                      "example": "profile.png"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": " Updates a product.",
        "tags": ["product"],
        "description": "Updates a product.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "name": {
                    "type": "string",
                    "example": "Product name"
                  },
                  "description": {
                    "type": "string",
                    "example": "Product description"
                  },
                  "price": {
                    "type": "number",
                    "example": "100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Product updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": " Deletes a product.",
        "tags": ["product"],
        "description": "Deletes a product.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Product deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/product/{productId}/review": {
      "post": {
        "summary": " Adds a review.",
        "tags": ["review"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "description": "Adds a review.",
        "requestBody": {
          "required": true,
          "content": {
            "$ref": "#/components/schemas/Review"
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Review added"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/product/{productId}/review/{reviewId}": {
      "patch": {
        "summary": " Updates a review.",
        "tags": ["review"],
        "description": "Updates a review.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "description": "The review's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "$ref": "#/components/schemas/Review"
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Review updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": " Deletes a review.",
        "tags": ["review"],
        "description": "Deletes a review.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "description": "The review's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Review deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/favItem": {
      "get": {
        "summary": " Gets all favItems.",
        "tags": ["favItem"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The product title",
                        "example": "Product title"
                      },
                      "price": {
                        "type": "number",
                        "description": "The product price",
                        "example": "Product price"
                      },
                      "size": {
                        "type": "object",
                        "properties": {
                          "height": {
                            "type": "number",
                            "description": "The product height",
                            "example": "Product height"
                          },
                          "width": {
                            "type": "number",
                            "description": "The product width",
                            "example": "Product width"
                          },
                          "name": {
                            "type": "string",
                            "description": "The size name",
                            "example": "small"
                          }
                        }
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "The product image",
                          "example": "image1.jpg"
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "userName": {
                            "type": "string",
                            "description": "The user's name",
                            "example": "John Doe"
                          },
                          "image": {
                            "type": "string",
                            "description": "The user's image",
                            "example": "profile.png"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/favItem/{productId}": {
      "post": {
        "summary": " Adds a favItem.",
        "tags": ["favItem"],
        "description": "Adds a favItem.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "FavItem added"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": " Deletes a favItem.",
        "tags": ["favItem"],
        "description": "Deletes a favItem.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product's ID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "FavItem deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/order": {
      "post": {
        "summary": " Creates an order.",
        "tags": ["order"],
        "description": "Creates an order.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "The product's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Order created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "summary": " Gets all orders.",
        "tags": ["order"],
        "description": "Gets all orders, for aministrator only.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
                      },

                      "totalPrice": {
                        "type": "number",
                        "example": "100"
                      },
                      "isDelivered": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "isPaid": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00.000Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "userOrder": {
      "get": {
        "summary": " Gets all user's order .",
        "tags": ["order"],
        "description": "Gets all user's order",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description":"order id",
                        "format": "uuid",
                        "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
                      },

                      "totalPrice": {
                        "type": "number",
                        "example": "150"
                      },
                      "product": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "product title"
                          },
                          "price": {
                            "type": "number",
                            "example": "100"
                          },
                          "size":{
                            "type" : "object",
                            "properties":{
                              "name":{
                                "type" : "string",
                                "example" : "size name"
                              },
                              "hieght":{
                                "type" : "number",
                                "example" : "100"
                              },
                              "width":{
                                "type" : "number",
                                "example" : "100"
                              }
                              }
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "image url"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "summary": " Gets an order.",
        "tags": ["order"],
        "description": "Gets an order.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
                    },
                    "shippingAddress": {
                      "type": "string",
                      "example": "shipping address"
                    },
                    "totalPrice": {
                      "type": "number",
                      "example": "100"
                    },
                    "payment": {
                      "type": "string",
                      "example": "payment"
                    },
                    "isDelivered": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "isPaid": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "product title"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "image url"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": " Updates an order.",
        "tags": ["order"],
        "description": "Updates an order.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Order updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": " Deletes an order.",
        "tags": ["order"],
        "description": "Deletes an order, for admin only.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Order deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/order/{orderId}/pay": {
      "patch": {
        "summary": "Pays an order.",
        "tags": ["order"],
        "description": "change order status to paid",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Order paid successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/order/{orderId}/deliver": {
      "patch": {
        "summary": "Delivers an order.",
        "tags": ["order"],
        "description": "change order status to delivered",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "The message",
                      "example": "Order delivered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["userName", "fullName", "email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
            "description": "The user's ID",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "description": "User name",
            "example": "userName",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          },
          "fullName": {
            "type": "string",
            "description": "Full name",
            "example": "fullName",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z ]+$",
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "email@example.com",
            "minLength": 1,
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,}",
            "minLength": 8,
            "maxLength": 255,
            "format": "password"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "enum": ["male", "female"]
          },
          "birthday": {
            "type": "string",
            "description": "User birthday",
            "format": "date"
          },
          "phoneNumber": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "User phone number",
            "example": ["0912345678", "0987654321"]
          },
          "address": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "User address",
            "example": ["address1", "address2"]
          },
          "role": {
            "type": "string",
            "description": "User role",
            "enum": ["admin", "user"]
          }
        }
      },
      "Product": {
        "type": "object",
        "required": ["title", "price", "size", "description", "images"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
            "description": "The product's ID",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "description": "Product title",
            "example": "product title",
            "pattern": "^[a-zA-Z0-9_]*$",
            "minLength": 1,
            "maxLength": 255,
            "nullable": false
          },
          "price": {
            "type": "integer",
            "description": "Product price",
            "example": 100
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "example": "product description",
            "minLength": 1,
            "maxLength": 255
          },
          "size": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "enum": ["medium", "small", "large", "x-large", "xx-large"],
                "description": "Product size",
                "example": "medium"
              },
              "hieght": {
                "type": "integer",
                "description": "Product height",
                "example": 100
              },
              "width": {
                "type": "integer",
                "description": "Product width",
                "example": 100
              }
            }
          },
          "color": {
            "type": "string",
            "description": "Product color",
            "example": "red"
          },
          "type": {
            "type": "string",
            "description": "Product type",
            "example": "type"
          },
          "purpose": {
            "type": "string",
            "enum": ["sale", "rent"],
            "description": "Product purpose",
            "example": "sale",
            "default": "rent"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary",
              "description": "Product images",
              "example": "image1.jpg"
            }
          }
        }
      },
      "Review": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
            "description": "The review's ID",
            "readOnly": true
          },
          "content": {
            "type": "string",
            "description": "Review content",
            "example": "review content",
            "minLength": 1,
            "maxLength": 255
          }
        }
      },
      "Order": {
        "type": "object",
        "required": ["shippingAddress", "payment"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "5e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f",
            "description": "The order's ID",
            "readOnly": true
          },
          "shippingAddress": {
            "type": "string",
            "description": "Shipping address",
            "example": "shippingAddress",
            "minLength": 1,
            "maxLength": 255
          },
          "payment": {
            "type": "string",
            "description": "Payment method",
            "enum": ["cash", "card"],
            "example": "card",
            "default": "cash",
            "minLength": 1,
            "maxLength": 255,
            "nullable": false
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Bad request"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Not Found"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "token"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
